# =============================================================================
# TMUX Configuration
# =============================================================================

# -----------------------------------------------------------------------------
# General Settings
# -----------------------------------------------------------------------------

# Set terminal colors
set -g default-terminal "tmux-256color"
set -as terminal-overrides ",*:Tc"

# Enable clickable file paths (OSC 8 hyperlinks)
set -as terminal-features ",*:hyperlinks"

# Enable mouse support
set -g mouse on

# Start windows and panes at 1, not 0 (more ergonomic)
set -g base-index 1
setw -g pane-base-index 1

# Auto renumber windows on close
set -g renumber-windows on

# Increase scrollback buffer size
set -g history-limit 10000

# Faster command sequences (no delay after escape)
set -s escape-time 0

# Repeat time for repeatable commands (community best practice: 300ms)
set -g repeat-time 300

# Focus events enabled for terminals that support them
set -g focus-events on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*.
setw -g aggressive-resize on

# -----------------------------------------------------------------------------
# Key Bindings
# -----------------------------------------------------------------------------

# Remap prefix from 'C-b' to 'C-a' (easier to reach)
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Quick configuration reload
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded!"

# Split panes using | and - (more intuitive)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Note: Pane navigation handled by vim-tmux-navigator plugin
# Use C-h/j/k/l to navigate seamlessly between Vim splits and tmux panes

# Resize panes with Vim keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Rename pane title
bind t command-prompt -p "Pane title:" "select-pane -T '%%'"

# Enhanced tree view showing windows with pane counts and titles
bind w choose-tree -Zw -F "#{window_name} (#{window_panes} panes)#{?pane_title, - #{pane_title},}"

# Full tree view with all sessions, windows, and panes
bind W choose-tree -Z

# -----------------------------------------------------------------------------
# Copy Mode Settings (Vi-style)
# -----------------------------------------------------------------------------

# Use Vi mode
setw -g mode-keys vi

# Vi-style copy mode bindings
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi C-v send -X rectangle-toggle

# macOS clipboard integration
if-shell "uname | grep -q Darwin" {
  bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
  bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"
}

# Enter copy mode with Prefix + [
bind Enter copy-mode

# -----------------------------------------------------------------------------
# Status Bar Configuration
# -----------------------------------------------------------------------------

# Status bar position
set -g status-position bottom

# Status bar update interval
set -g status-interval 5

# Status bar colors (will be overridden by theme if using one)
set -g status-style "bg=black,fg=white"

# Left side of status bar
set -g status-left-length 60
set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P:#[fg=magenta]#{pane_title}"

# Right side of status bar
set -g status-right-length 60
set -g status-right "#[fg=cyan]#H #[fg=yellow]%H:%M %d-%b-%y"

# Window status
setw -g window-status-format " #I: #W "
setw -g window-status-current-format "#[fg=black,bg=cyan,bold] #I: #W "

# Pane borders
set -g pane-border-style "fg=colour238"
set -g pane-active-border-style "fg=cyan"

# Pane border titles
set -g pane-border-status top
set -g pane-border-format "#[fg=colour238]#P: #{pane_title}"

# -----------------------------------------------------------------------------
# Popup Windows Configuration
# -----------------------------------------------------------------------------

# Quick shell popup (60% width, 75% height)
bind ! display-popup -E -w 60% -h 75%

# New session prompt
bind m command-prompt -p "New session name:" "new-session -s '%%' -c '#{pane_current_path}'"

# Session switcher with fzf (if available)
if-shell "command -v fzf" {
  bind ` display-popup -E -w 60% -h 50% "tmux list-sessions | fzf --reverse --header='Select session:' | cut -d: -f1 | xargs tmux switch-client -t"
}

# Kill session with fzf (if available)
if-shell "command -v fzf" {
  bind X display-popup -E "tmux list-sessions -F '#{?session_attached,,#{session_name}}' | fzf --reverse | xargs -I {} tmux kill-session -t {}"
}

# Git popup with lazygit (if available)
if-shell "command -v lazygit" {
  bind g display-popup -E -w 80% -h 80% "lazygit"
}

# -----------------------------------------------------------------------------
# Plugin Manager Configuration
# -----------------------------------------------------------------------------

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'catppuccin/tmux'

# Navigation enhancement - seamless vim/tmux pane navigation
set -g @plugin 'christoomey/vim-tmux-navigator'

# Clipboard improvement - better copy/paste integration
set -g @plugin 'tmux-plugins/tmux-yank'

# Fuzzy finder for sessions, windows, panes, and more
set -g @plugin 'sainnhe/tmux-fzf'

# Plugin settings
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '60'  # Community recommended: 60 min (less disruptive)

# Catppuccin theme settings
set -g @catppuccin_flavour 'mocha' # or frappe, macchiato, latte

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
